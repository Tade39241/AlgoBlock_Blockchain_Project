Testing database connections...
  - Connected to node database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/node.db
  - Connected to blockchain database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/blockchain.db
  - Connected to account database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/account.db
Starting node 0 on port 9000 with custom DB paths
Creating account for node 0 with address: 1DPPqS7kQNQMcn28du4sYJe8YKLUH8Jrig
Account data written directly to DB at: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/account.db
Account details: public_addr=1DPPqS7kQNQMcn28du4sYJe8YKLUH8Jrig, balance=1000
Setting blockchain public address to: 1DPPqS7kQNQMcn28du4sYJe8YKLUH8Jrig
Blockchain initialized successfully through BlockchainManager
Testing database connections...
  - Connected to node database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/node.db
  - Connected to blockchain database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/blockchain.db
  - Connected to account database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/account.db
 * Serving Flask app 'code_node2.Blockchain.Frontend.run' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
Testing database connections...
  - Connected to node database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/node.db
  - Connected to blockchain database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/blockchain.db
  - Connected to account database: /Users/tadeatobatele/Documents/UniStuff/CS351 Project/code/PoSBlockchain/network_data/node_0/account.db
SERVER STARTED
LISTENING at 127.0.0.1:9000
[syncManager] Received validator selection message.
[DEBUG] Selected validator: {'public_addr': '1Lu9SwPPo7DJYrMVrZnkDXVw5y4aEeF1kz', 'privateKey': 46707185248865296345366463593339102785859545093537333336358754291775493830931, 'private_key': 46707185248865296345366463593339102785859545093537333336358754291775493830931, 'public_key': '035b605b121b0382b340dd55bb960bd73c19bb5b484d61837b41beb29b1e8341b1', 'balance': 1000, 'staked': 100, 'pending_rewards': 0, 'unspent': 100000000000, 'locked_until': 0, 'staking_history': '[]'}
[DEBUG] My public address: 1DPPqS7kQNQMcn28du4sYJe8YKLUH8Jrig
Database path used: data/account.db
Account object created: address=1DPPqS7kQNQMcn28du4sYJe8YKLUH8Jrig, staked=10000000000 satoshis (100.0 coins), rewards=267000000000 satoshis (2670.0 coins)
[syncManager] Not the selected validator: 1Lu9SwPPo7DJYrMVrZnkDXVw5y4aEeF1kz
Received account update from port 9002 for address: 1Lu9SwPPo7DJYrMVrZnkDXVw5y4aEeF1kz
Successfully updated local account database for 1Lu9SwPPo7DJYrMVrZnkDXVw5y4aEeF1kz
[Receiver] Received envelope with command: b'block' and payload length: 273 bytes
New Block Received : 144
Blocks to process: 1
Processing block with hash: dc86b1af...
Signature type: <class 'Blockchain.Backend.core.EllepticCurve.EllepticCurve.Signature'>
Processed transaction with ID: ad0f4d80ff891d86673eb3779e1c65feb275b1aaed7e907a5194f720cc22351f
Attempting atomic write of block to database file: data/blockchain.db
[LocalChain] Block 144 successfully integrated (atomic write).
[Mempool Cleanup] No confirmed transactions found in mempool.
